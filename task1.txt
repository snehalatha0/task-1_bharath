# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Load the dataset
# Assuming you have a CSV file containing your dataset
data = pd.read_csv('house_prices.csv')

# Data preprocessing
# Assuming you have already preprocessed your data

# Split data into features (X) and target variable (y)
X = data.drop('price', axis=1)
y = data['price']

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training using scikit-learn (Linear Regression)
model_sklearn = LinearRegression()
model_sklearn.fit(X_train, y_train)

# Evaluate the model
y_pred_sklearn = model_sklearn.predict(X_test)
mse_sklearn = mean_squared_error(y_test, y_pred_sklearn)
print("Mean Squared Error (sklearn):", mse_sklearn)

# Model training using TensorFlow
model_tf = Sequential([
    Dense(64, activation='relu', input_shape=(X_train.shape[1],)),
    Dense(64, activation='relu'),
    Dense(1)
])

model_tf.compile(optimizer='adam', loss='mse')
model_tf.fit(X_train, y_train, epochs=50, batch_size=32, verbose=0)

# Evaluate the model
y_pred_tf = model_tf.predict(X_test)
mse_tf = mean_squared_error(y_test, y_pred_tf)
print("Mean Squared Error (TensorFlow):", mse_tf)